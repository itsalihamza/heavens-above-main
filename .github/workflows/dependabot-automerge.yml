name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  check-updates:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      
      - name: Check for outdated packages
        id: outdated
        run: |
          npm outdated --json > outdated.json || true
          if [ -s outdated.json ]; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Upload outdated packages report
        if: steps.outdated.outputs.has_updates == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: outdated-packages
          path: outdated.json
  
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    needs: check-updates
    
    strategy:
      matrix:
        update-type: [patch, minor]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      
      - name: Install npm-check-updates
        run: npm install -g npm-check-updates
      
      - name: Update ${{ matrix.update-type }} dependencies
        run: |
          if [ "${{ matrix.update-type }}" == "patch" ]; then
            ncu -u --target patch
          else
            ncu -u --target minor
          fi
      
      - name: Install updated dependencies
        run: npm install
      
      - name: Run tests
        run: npm test
        continue-on-error: true
      
      - name: Run linting
        run: npm run lint
        continue-on-error: true
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update ${{ matrix.update-type }} dependencies'
          title: 'üîÑ Update ${{ matrix.update-type }} dependencies'
          body: |
            ## Dependency Updates
            
            This PR updates ${{ matrix.update-type }} dependencies to their latest versions.
            
            ### Changes
            - Automatically generated by GitHub Actions
            - Update type: **${{ matrix.update-type }}**
            - Triggered on: ${{ github.event_name }}
            
            ### Testing
            - [ ] All tests passed
            - [ ] Linting passed
            - [ ] Manual testing completed
            
            ### Checklist
            - [ ] Review updated dependencies
            - [ ] Check for breaking changes
            - [ ] Verify application functionality
            
            **Auto-generated by dependency-updates workflow**
          branch: dependency-update-${{ matrix.update-type }}-${{ github.run_number }}
          delete-branch: true
          labels: |
            dependencies
            automated
            ${{ matrix.update-type }}
  
  update-major-dependencies:
    name: Create Issue for Major Updates
    runs-on: ubuntu-latest
    needs: check-updates
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      
      - name: Check for major updates
        id: major
        run: |
          npm outdated --json > outdated.json || true
          if [ -s outdated.json ]; then
            major_updates=$(jq -r 'to_entries | map(select(.value.latest != .value.current and (.value.latest | split(".")[0]) != (.value.current | split(".")[0]))) | length' outdated.json 2>/dev/null || echo 0)
          else
            major_updates=0
          fi
          echo "count=$major_updates" >> $GITHUB_OUTPUT
      
      - name: Create issue for major updates
        if: steps.major.outputs.count > 0
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const outdated = JSON.parse(fs.readFileSync('outdated.json', 'utf8'));
            
            let body = '## Major Dependency Updates Available\n\n';
            body += 'The following packages have major version updates:\n\n';
            body += '| Package | Current | Latest | Type |\n';
            body += '|---------|---------|--------|------|\n';
            
            for (const [pkg, info] of Object.entries(outdated)) {
              const currentMajor = info.current.split('.')[0];
              const latestMajor = info.latest.split('.')[0];
              if (currentMajor !== latestMajor) {
                body += `| ${pkg} | ${info.current} | ${info.latest} | ${info.type} |\n`;
              }
            }
            
            body += '\n‚ö†Ô∏è **Note**: Major updates may contain breaking changes. Please review changelogs before updating.\n';
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® Major Dependency Updates Available',
              body: body,
              labels: ['dependencies', 'major-update', 'needs-review']
            });
  
  security-updates:
    name: Apply Security Updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      
      - name: Install dependencies
        run: npm ci

      - name: Run npm audit fix
        run: |
          npm audit fix
          npm audit fix --force || true
      
      - name: Create Pull Request for security fixes
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'security: apply automated security fixes'
          title: 'üîí Security: Automated vulnerability fixes'
          body: |
            ## Security Updates
            
            This PR applies automated security fixes using `npm audit fix`.
            
            ### Changes
            - Applied security patches
            - Fixed known vulnerabilities
            
            **Priority: HIGH** - Please review and merge promptly.
          branch: security-fixes-${{ github.run_number }}
          labels: |
            security
            automated
            high-priority